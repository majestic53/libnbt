libnbt is a C++ library for reading named byte tags

Usage

The easiest way to access block/heightmap data for each chunk is to
use the region_file_reader object. No cleanup is necessary. All 
allocations/deallocations are handled internally within the reader.

To instantiate a region_file_reader object, either:

region_file_reader reader;
reader = region_file_reader("path-to-region-file");

or

region_file_reader reader("path-to-region-file");

To read in block/heightmap data:

	std::vector<char> blocks = reader.get_chunk_blocks_at(x, z);
	std::vector<char> heights = reader.get_chunk_heights_at(x, z);

Putting it all together:

#include <vector>
#include "region_file_exc.hpp" // exception handle
#include "region_file_reader.hpp"

int main(int argc, char *argv[]) {

	// instantiate a file reader
	region_file_reader reader;

	// create vectors to hold block/height data
	std::vector<char> blocks, heights;

	try {

		// open a region file
		reader = region_file_reader("path-to-region-file");
		
		// iterate through all possible chunks within a region
		for(unsigned int z = 0; z < 32; ++z)
			for(unsigned int x = 0; x < 32; ++x) {
				
				// this keeps an exception from being thrown
				// when a non-existant chunk is requested
				if(!reader.is_filled(x, z))
					continue;

				// if everything goes well, retrieve the block/height data
				blocks = reader.get_chunk_blocks_at(x, z);
				heights = reader.get_chunk_heights_at(x, z);

				// ...
			}
				

	// catch all exception that may occur
	} catch(region_file_exc &exc) {
		std::cerr << exc.to_string() << std::endl;
		return exc.get_exception();
	}
	return 0;
}

License

Copyright(C) 2012 David Jolly <majestic53@gmail.com>

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
